crystal_doc_search_index_callback({"repository_name":"content_disposition","body":"# content_disposition.cr\n\n[![Build Status](https://travis-ci.org/jetrockets/content_disposition.cr.svg?branch=master)](https://travis-ci.org/jetrockets/content_disposition.cr)\n[![GitHub release](https://img.shields.io/github/release/jetrockets/content_disposition.cr.svg)](https://GitHub.com/jetrockets/content_disposition.cr/releases/)\n[![GitHub license](https://img.shields.io/github/license/jetrockets/content_disposition.cr)](https://github.com/jetrockets/content_disposition.cr/blob/master/LICENSE)\n\nCreating a properly encoded and escaped standards-compliant HTTP\n`Content-Disposition` header for potential filenames with special characters is\nsurprisingly confusing.\n\nThis library does that and only that, in a single 50-line file with no dependencies.\n\nCrystal port of [https://github.com/shrinerb/content_disposition](https://github.com/shrinerb/content_disposition)\n\n## Content-Disposition header\n\nBefore we proceed with the usage guide, first a bit of explanation what is the\n`Content-Disposition` header. The `Content-Disposition` response header\nspecifies the behaviour of the web browser when opening a URL.\n\nThe `inline` disposition will display the content \"inline\", which means that\nknown MIME types from the `Content-Type` response header are displayed inside\nthe browser, while unknown MIME types will be immediately downloaded.\n\n```http\nContent-Disposition: inline\n```\n\nThe `attachment` disposition will tell the browser to always download the\ncontent, regardless of the MIME type.\n\n```http\nContent-Disposition: attachment\n```\n\nWhen the content is downloaded, by default the filename will be last URL\nsegment. This can be changed via the `filename` parameter:\n\n```http\nContent-Disposition: attachment; filename=\"image.jpg\"\n```\n\nTo support old browsers, the `filename` should be the ASCII version of the\nfilename, while the `filename*` parameter can be used for the full filename\nwith any potential UTF-8 characters. Special characters from the filename need\nto be URL-encoded in both parameters.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     content_disposition:\n       github: jetrockets/content_disposition\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"content_disposition\"\n\nContentDisposition.format(disposition: \"inline\", filename: \"racecar.jpg\")\n# => \"inline; filename=\\\"racecar.jpg\\\"; filename*=UTF-8''racecar.jpg\"\n```\n\nA proper content-disposition value for non-ascii filenames has a pure-ascii\nas well as an ascii component. By default the filename will be turned into ascii\nby replacing any non-ascii chars with `'?'` (which is then properly\npercent-escaped to `%3F` in output).\n\n```crystal\nContentDisposition.format(disposition: \"attachment\", filename: \"råcëçâr.jpg\")\n# => \"attachment; filename=\\\"r%3Fc%3F%3F%3Fr.jpg\\\"; filename*=UTF-8''r%C3%A5c%C3%AB%C3%A7%C3%A2r.jpg\"\n```\n\nBut you can pass in your own proc to do it however you want.\n\n```crystal\nContentDisposition.format(\n  disposition: \"attachment\",\n  filename: \"råcëçâr.jpg\",\n  to_ascii: ->(filename : String) { String.new(filename.encode(\"US-ASCII\", invalid: :skip)) }\n)\n# => \"attachment; filename=\\\"racecar.jpg\\\"; filename*=UTF-8''r%C3%A5c%C3%AB%C3%A7%C3%A2r.jpg\"\n```\n\nYou can also configure `.to_ascii` globally for any invocation:\n\n```crystal\nContentDisposition.to_ascii = ->(filename : String) { String.new(filename.encode(\"US-ASCII\", invalid: :skip)) }\n```\n\nThe `.format` method is aliased to `.call`, so you can do:\n\n```crystal\nContentDisposition.(disposition: \"inline\", filename: \"råcëçâr.jpg\")\n# => \"inline; filename=\\\"r%3Fc%3F%3F%3Fr.jpg\\\"; filename*=UTF-8''r%C3%A5c%C3%AB%C3%A7%C3%A2r.jpg\"\n```\n\nThere are also `.attachment` and `.inline` shorthands:\n\n```crystal\nContentDisposition.attachment(\"racecar.jpg\")\n# => \"attachment; filename=\\\"racecar.jpg\\\"; filename*=UTF-8''racecar.jpg\"\nContentDisposition.inline(\"racecar.jpg\")\n# => \"inline; filename=\\\"racecar.jpg\\\"; filename*=UTF-8''racecar.jpg\"\n```\n\nYou can also create a `ContentDisposition` instance to build your own\n`Content-Disposition` header.\n\n```crystal\ncontent_disposition = ContentDisposition.new(\n  disposition: \"attachment\",\n  filename:    \"råcëçâr.jpg\",\n)\n\ncontent_disposition.disposition\n# => \"attachment\"\ncontent_disposition.filename\n# => \"råcëçâr.jpg\"\n\ncontent_disposition.ascii_filename\n# => \"filename=\\\"r%3Fc%3F%3F%3Fr.jpg\\\"\"\ncontent_disposition.utf8_filename\n# => \"filename*=UTF-8''r%C3%A5c%C3%AB%C3%A7%C3%A2r.jpg\"\n\ncontent_disposition.to_s\n# => \"attachment; filename=\\\"r%3Fc%3F%3F%3Fr.jpg\\\"; filename*=UTF-8''r%C3%A5c%C3%AB%C3%A7%C3%A2r.jpg\"\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/jetrockets/content_disposition/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Igor Alexandrov](https://github.com/igor-alexandrov) - creator and maintainer\n","program":{"html_id":"content_disposition/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"content_disposition","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"content_disposition/ContentDisposition","path":"ContentDisposition.html","kind":"class","full_name":"ContentDisposition","name":"ContentDisposition","abstract":false,"superclass":{"html_id":"content_disposition/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"content_disposition/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"content_disposition/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/content_disposition.cr","line_number":3,"url":"https://github.com/jetrockets/content_disposition.cr/blob/v1.1.2/src/content_disposition.cr#L3"}],"repository_name":"content_disposition","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ATTACHMENT","name":"ATTACHMENT","value":"\"attachment\"","doc":null,"summary":null},{"id":"DEFAULT_TO_ASCII","name":"DEFAULT_TO_ASCII","value":"->(filename : String) do\n  array = [] of Char\n  filename.each_char do |char|\n    array << (char.ascii? ? char : '?')\n  end\n  array.join\nend","doc":null,"summary":null},{"id":"INLINE","name":"INLINE","value":"\"inline\"","doc":null,"summary":null},{"id":"RFC_5987_ESCAPED_CHAR","name":"RFC_5987_ESCAPED_CHAR","value":"/[^A-Za-z0-9!#$&+.^_`|~-]/","doc":null,"summary":null},{"id":"TRADITIONAL_ESCAPED_CHAR","name":"TRADITIONAL_ESCAPED_CHAR","value":"/[^ A-Za-z0-9!#$+.^_`|~-]/","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"attachment(filename=nil)-class-method","html_id":"attachment(filename=nil)-class-method","name":"attachment","doc":null,"summary":null,"abstract":false,"args":[{"name":"filename","doc":null,"default_value":"nil","external_name":"filename","restriction":""}],"args_string":"(filename = <span class=\"n\">nil</span>)","source_link":"https://github.com/jetrockets/content_disposition.cr/blob/v1.1.2/src/content_disposition.cr#L18","def":{"name":"attachment","args":[{"name":"filename","doc":null,"default_value":"nil","external_name":"filename","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"format(disposition: ATTACHMENT, filename: filename)"}},{"id":"call(**options)-class-method","html_id":"call(**options)-class-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**options)","source_link":"https://github.com/jetrockets/content_disposition.cr/blob/v1.1.2/src/content_disposition.cr#L30","def":{"name":"call","args":[],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"format(**options)"}},{"id":"format(**options)-class-method","html_id":"format(**options)-class-method","name":"format","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**options)","source_link":"https://github.com/jetrockets/content_disposition.cr/blob/v1.1.2/src/content_disposition.cr#L26","def":{"name":"format","args":[],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(**options)).to_s"}},{"id":"inline(filename=nil)-class-method","html_id":"inline(filename=nil)-class-method","name":"inline","doc":null,"summary":null,"abstract":false,"args":[{"name":"filename","doc":null,"default_value":"nil","external_name":"filename","restriction":""}],"args_string":"(filename = <span class=\"n\">nil</span>)","source_link":"https://github.com/jetrockets/content_disposition.cr/blob/v1.1.2/src/content_disposition.cr#L22","def":{"name":"inline","args":[{"name":"filename","doc":null,"default_value":"nil","external_name":"filename","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"format(disposition: INLINE, filename: filename)"}},{"id":"to_ascii:Proc(String,String)?-class-method","html_id":"to_ascii:Proc(String,String)?-class-method","name":"to_ascii","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Proc(String, String)?","source_link":"https://github.com/jetrockets/content_disposition.cr/blob/v1.1.2/src/content_disposition.cr#L16","def":{"name":"to_ascii","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Proc(String, String) | ::Nil","visibility":"Public","body":"@@to_ascii"}},{"id":"to_ascii=(to_ascii:Proc(String,String)?)-class-method","html_id":"to_ascii=(to_ascii:Proc(String,String)?)-class-method","name":"to_ascii=","doc":null,"summary":null,"abstract":false,"args":[{"name":"to_ascii","doc":null,"default_value":"","external_name":"to_ascii","restriction":"Proc(String, String) | ::Nil"}],"args_string":"(to_ascii : Proc(String, String)?)","source_link":"https://github.com/jetrockets/content_disposition.cr/blob/v1.1.2/src/content_disposition.cr#L16","def":{"name":"to_ascii=","args":[{"name":"to_ascii","doc":null,"default_value":"","external_name":"to_ascii","restriction":"Proc(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@to_ascii = to_ascii"}}],"constructors":[{"id":"new(disposition:String|Symbol,filename:String?,to_ascii:Proc(String,String)?=nil)-class-method","html_id":"new(disposition:String|Symbol,filename:String?,to_ascii:Proc(String,String)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"disposition","doc":null,"default_value":"","external_name":"disposition","restriction":"String | Symbol"},{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String | ::Nil"},{"name":"to_ascii","doc":null,"default_value":"nil","external_name":"to_ascii","restriction":"Proc(String, String) | ::Nil"}],"args_string":"(disposition : String | Symbol, filename : String?, to_ascii : Proc(String, String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/jetrockets/content_disposition.cr/blob/v1.1.2/src/content_disposition.cr#L36","def":{"name":"new","args":[{"name":"disposition","doc":null,"default_value":"","external_name":"disposition","restriction":"String | Symbol"},{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String | ::Nil"},{"name":"to_ascii","doc":null,"default_value":"nil","external_name":"to_ascii","restriction":"Proc(String, String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(disposition, filename, to_ascii)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ascii_filename:String?-instance-method","html_id":"ascii_filename:String?-instance-method","name":"ascii_filename","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/jetrockets/content_disposition.cr/blob/v1.1.2/src/content_disposition.cr#L54","def":{"name":"ascii_filename","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"if filename\n  (\"filename=\\\"\" + (percent_escape(to_ascii.not_nil!.call(filename.not_nil!), TRADITIONAL_ESCAPED_CHAR))) + \"\\\"\"\nend"}},{"id":"disposition:String|Symbol-instance-method","html_id":"disposition:String|Symbol-instance-method","name":"disposition","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String | Symbol","source_link":"https://github.com/jetrockets/content_disposition.cr/blob/v1.1.2/src/content_disposition.cr#L34","def":{"name":"disposition","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@disposition"}},{"id":"filename:String?-instance-method","html_id":"filename:String?-instance-method","name":"filename","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/jetrockets/content_disposition.cr/blob/v1.1.2/src/content_disposition.cr#L34","def":{"name":"filename","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@filename"}},{"id":"to_ascii:String->String?-instance-method","html_id":"to_ascii:String->String?-instance-method","name":"to_ascii","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String -> String?","source_link":"https://github.com/jetrockets/content_disposition.cr/blob/v1.1.2/src/content_disposition.cr#L34","def":{"name":"to_ascii","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@to_ascii"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Returns a string representation of this object.\n\nDescendants must usually **not** override this method. Instead,\nthey must override `to_s(io)`, which must append to the given\nIO object.","summary":"<p>Returns a string representation of this object.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/jetrockets/content_disposition.cr/blob/v1.1.2/src/content_disposition.cr#L44","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if filename\n  \"#{disposition}; #{ascii_filename}; #{utf8_filename}\"\nelse\n  \"#{disposition}\"\nend"}},{"id":"utf8_filename:String?-instance-method","html_id":"utf8_filename:String?-instance-method","name":"utf8_filename","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/jetrockets/content_disposition.cr/blob/v1.1.2/src/content_disposition.cr#L60","def":{"name":"utf8_filename","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"if filename\n  \"filename*=UTF-8''\" + (percent_escape(filename.not_nil!, RFC_5987_ESCAPED_CHAR))\nend"}}],"macros":[],"types":[]}]}})